plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

architectury {
    platformSetupLoomIde()
    forge()
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common
}

repositories {
    maven { url "https://maven.shedaniel.me/" }
}

dependencies {
    forge "net.minecraftforge:forge:${rootProject.forge_version}"

    if (minecraft_version == "1.16.5") {
        addJar "me.shedaniel:architectury-forge:${rootProject.architectury_version}"
    } else {
        addJar "dev.architectury:architectury-forge:${rootProject.architectury_version}"
    }

    modImplementation "me.shedaniel.cloth:cloth-config-forge:${rootProject.cloth_config_version}"

    common "com.github.LlamaLad7:MixinExtras:${rootProject.mixin_extras}"
    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionForge")) { transitive = false }
}

shadowJar {
    exclude "fabric.mod.json"
    exclude "architectury.common.json"

    configurations = [project.configurations.shadowCommon, project.configurations.shade]

    if (minecraft_version == "1.16.5") {
        // This is because 1.18.1- doesn't support JarJar
        relocate "com.llamalad7.mixinextras", "${rootProject.mod_id}.libraries.com.llamalad7.mixinextras"
    }

    if (minecraft_version == "1.16.5") {
        exclude "META-INF/accesstransformer.cfg"
    }

    classifier "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    classifier null
}

jar {
    classifier "dev"
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenForge(MavenPublication) {
            artifactId = rootProject.archives_base_name + "-" + project.name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}
